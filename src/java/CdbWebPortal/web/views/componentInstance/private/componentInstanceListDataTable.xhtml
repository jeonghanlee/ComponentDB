<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui">

    <p:dataTable id="componentInstanceListDataTable" 
                 widgetVar="componentInstanceListDataTableWidget"
                 var="componentInstanceObject" 
                 value="#{componentInstanceController.listDataModel}" 
                 filteredValue="#{componentInstanceController.filteredObjectList}"
                 binding="#{componentInstanceController.listDataTable}"
                 rows="#{componentInstanceController.displayNumberOfItemsPerPage}"
                 paginator="true" 
                 paginatorAlwaysVisible="false"
                 emptyMessage="No component instances found.">

        <p:column sortBy="#{componentInstanceObject.id}" headerText="Id"
                  filterBy="#{componentInstanceObject.id}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterById}"
                  filterStyleClass="shortFilterBox"
                  rendered="#{componentInstanceController.displayId}">
            <h:outputText value="#{componentInstanceObject.id}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.qrId}" headerText="QR Id"
                  filterBy="#{componentInstanceObject.qrId}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByQrId}"
                  rendered="#{componentInstanceController.displayQrId}">
            <h:outputLink value="view.xhtml?id=#{componentInstanceObject.id}" title="View component details">
                <h:outputText id="qrId" value="#{componentInstanceObject.qrIdDisplay}"/>
            </h:outputLink>  
        </p:column>

        <p:column sortBy="#{componentInstanceObject.tag}" headerText="Tag"
                  filterBy="#{componentInstanceObject.tag}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByTag}">
            <h:outputText id="tag" value="#{componentInstanceObject.tag}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.serialNumber}" headerText="Serial Number"
                  filterBy="#{componentInstanceObject.serialNumber}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterBySerialNumber}"                  
                  rendered="#{componentInstanceController.displaySerialNumber}">
            <h:outputText id="serialNumber" value="#{componentInstanceObject.serialNumber}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.component.name}" headerText="Component"
                  filterBy="#{componentInstanceObject.component.name}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByComponent}">
            <h:outputText value="#{componentInstanceObject.component.name}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.location.name}" headerText="Location"
                  filterBy="#{componentInstanceObject.location.name}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByLocation}">
            <h:outputText value="#{componentInstanceObject.location.name}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.locationDetails}" headerText="Location Details"
                  filterBy="#{componentInstanceObject.locationDetails}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByLocationDetails}"
                  rendered="#{componentInstanceController.displayLocationDetails}">
            <h:outputText id="locationDetails" value="#{componentInstanceObject.locationDetails}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.description}" headerText="Description"
                  filterBy="#{componentInstanceObject.description}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByDescription}"
                  rendered="#{componentInstanceController.displayDescription}">
            <h:outputText id="description" value="#{componentInstanceObject.description}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.entityInfo.ownerUser.username}" headerText="Owner"
                  filterBy="#{componentInstanceObject.entityInfo.ownerUser.username}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByOwnerUser}"
                  rendered="#{componentInstanceController.displayOwnerUser}">
            <h:outputText value="#{componentInstanceObject.entityInfo.ownerUser.username}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.entityInfo.ownerUserGroup.name}" headerText="Group"
                  filterBy="#{componentInstanceObject.entityInfo.ownerUserGroup.name}" filterMatchMode="exact"
                  filterOptions="#{userGroupController.availableItemsForSelectOne}"
                  filterValue="#{componentInstanceController.filterByOwnerGroup}"
                  rendered="#{componentInstanceController.displayOwnerGroup}">
            <h:outputText value="#{componentInstanceObject.entityInfo.ownerUserGroup.name}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.entityInfo.createdByUser.username}" headerText="Created By"
                  filterBy="#{componentInstanceObject.entityInfo.createdByUser.username}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByCreatedByUser}"
                  rendered="#{componentInstanceController.displayCreatedByUser}">
            <h:outputText value="#{componentInstanceObject.entityInfo.createdByUser.username}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.entityInfo.createdOnDateTime}" headerText="Created On"
                  filterBy="#{componentInstanceObject.entityInfo.createdOnDateTime}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByCreatedOnDateTime}"
                  rendered="#{componentInstanceController.displayCreatedOnDateTime}">
            <h:outputText value="#{componentInstanceObject.entityInfo.createdOnDateTime}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.entityInfo.lastModifiedByUser.username}" headerText="Modified By"
                  filterBy="#{componentInstanceObject.entityInfo.lastModifiedByUser.username}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByLastModifiedByUser}"
                  rendered="#{componentInstanceController.displayLastModifiedByUser}">
            <h:outputText value="#{componentInstanceObject.entityInfo.lastModifiedByUser.username}"/>
        </p:column>

        <p:column sortBy="#{componentInstanceObject.entityInfo.lastModifiedOnDateTime}" headerText="Modified On"
                  filterBy="#{componentInstanceObject.entityInfo.lastModifiedOnDateTime}" filterMatchMode="contains"
                  filterValue="#{componentInstanceController.filterByLastModifiedOnDateTime}"
                  rendered="#{componentInstanceController.displayLastModifiedOnDateTime}">
            <h:outputText value="#{componentInstanceObject.entityInfo.lastModifiedOnDateTime}"/>
        </p:column>

        <p:column headerText="Actions" exportable="false">
            <ui:include src="../../common/private/commonListActionLinks.xhtml">
                <ui:param name="entityController" value="#{componentInstanceController}"/>
                <ui:param name="entityObject" value="#{componentInstanceObject}"/>
                <ui:param name="isEntityWriteable" value="#{loginController.isEntityWriteable(componentInstanceObject.entityInfo)}"/>
                <ui:param name="isEntityCloneable" value="#{loginController.loggedIn}"/>
            </ui:include>
        </p:column>



    </p:dataTable>


</ui:composition>

