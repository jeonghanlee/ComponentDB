<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <ui:param name="loadPropertyValues" value="#{loadPropertyValues != null ? loadPropertyValues : true}" />
    <ui:param name="entityPropertyTypeName" value="#{entityTypeName}Property"/>
    
    <!-- make image primary button requires current item controller to be set -->
    <ui:param name="showMakeImagePrimaryButton" value="#{showMakeImagePrimaryButton != null ? showMakeImagePrimaryButton : false}" />

    <p:outputPanel rendered="#{loadPropertyValues}">
        <h:outputText value="#{propertyValueObject.displayValue}"
                      rendered="#{propertyValueController.displayFreeFormTextValue(propertyValueObject)}"/>

        <h:outputText value="#{propertyValueObject.value}"
                      rendered="#{propertyValueController.displaySelectedTextValue(propertyValueObject)}"/>

        <p:outputPanel rendered="#{propertyValueController.displayImageValue(propertyValueObject) or propertyValueController.displayDocumentValue(propertyValueObject)}">
            <p:commandButton rendered="#{showMakeImagePrimaryButton and propertyValueController.displayImageValue(propertyValueObject)}" 
                             id="makeImagePrimaryButton" 
                             style="display: inline-block; float: left; padding-right: 5px;"
                             icon="#{currentItemController.getPrimaryImageButtonIcon(itemObject, propertyValueObject)}"
                             action="#{currentItemController.markImagePrimary(propertyValueObject)}"
                             update="@form">
                <p:tooltip for="makeImagePrimaryButton" value="Make image primary"/>
            </p:commandButton>
            <h:outputLink value="#{propertyValueController.getOriginalImageApplicationPath(propertyValueObject)}" 
                          target="_page_#{propertyValueObject.targetValue}" title="#{propertyValueObject.targetValue}">
                <ui:param name="viewableValue" value="#{propertyValueController.isPropertyValueViewable(propertyValueObject)}" />

                <p:outputPanel rendered="#{viewableValue}">
                    <p:graphicImage styleClass="domainEntityPropertyValueThumbnail" value="#{propertyValueController.getThumbnailImagePath(propertyValueObject)}" 
                                    alt="#{propertyValueObject.value}" title="#{propertyValueObject.value}" />               
                </p:outputPanel>
                <p:outputPanel rendered="#{!viewableValue}">
                    <h:outputText value="#{propertyValueObject.value}" />
                </p:outputPanel>
            </h:outputLink>            
        </p:outputPanel>

        <h:outputLink value="#{propertyValueObject.targetValue}" target="_page_#{propertyValueObject.targetValue}" title="#{propertyValueObject.targetValue}"
                      rendered="#{propertyValueController.displayHttpLinkValue(propertyValueObject)}">
            <h:outputText value="#{propertyValueObject.displayValue}"/>
        </h:outputLink>

        <h:outputText value="#{propertyValueObject.displayValue}"
                      rendered="#{propertyValueController.displayDateValue(propertyValueObject)}"/>

        <p:outputPanel rendered="#{propertyValueController.displayTableRecordReference(propertyValueObject)}">
            <h:outputText value="#{propertyValueObject.displayValue}"
                          rendered="#{propertyValueObject.targetValue == null}"/>
            <h:outputLink rendered="#{propertyValueObject.targetValue != null}" 
                          value="#{propertyValueObject.targetValue}"
                          target="_page_#{propertyValueObject.targetValue}">
                <h:outputText value="#{propertyValueObject.displayValue}"/> 
            </h:outputLink>
        </p:outputPanel>

        <p:commandLink rendered="#{propertyValueController.displayInfoActionValue(propertyValueObject)}"
                       onclick="#{entityPropertyTypeName}InfoAction#{propertyValueObject.id}()">
            <h:outputText value="#{propertyValueObject.displayValue}"  />
        </p:commandLink>

        <ui:fragment rendered="#{propertyValueController.displayBooleanValue(propertyValueObject)}">         
            <h:outputText value="" styleClass="ui-icon ui-icon-check" 
                          rendered="#{propertyValueObject.value}"/>
        </ui:fragment>

        <p:outputPanel rendered="#{propertyValueObject.infoActionCommand != null}">
            <p:remoteCommand name="#{entityPropertyTypeName}InfoAction#{propertyValueObject.id}"
                             oncomplete="loadInfoActionDialog();">
                <f:setPropertyActionListener target="#{propertyValueInfoActionBean.propertyValue}" 
                                             value="#{propertyValueObject}"/>
            </p:remoteCommand>
        </p:outputPanel>
    </p:outputPanel>
    <p:outputPanel rendered="#{!loadPropertyValues}">
        <h:outputText value="#{propertyValueObject.displayValue}*" rendered="#{propertyValueObject.displayValue != null and propertyValueObject.displayValue != ''}"  />
        <h:outputText value="#{propertyValueObject.value}*" 
                      rendered="#{(propertyValueObject.value != null or propertyValueObject.value != '') 
                                  and (propertyValueObject.displayValue == null or propertyValueObject.displayValue == '')}"  />
    </p:outputPanel>


</ui:composition>


