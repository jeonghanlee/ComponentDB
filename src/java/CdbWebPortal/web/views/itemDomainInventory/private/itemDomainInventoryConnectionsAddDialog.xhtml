<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright (c) UChicago Argonne, LLC. All rights reserved.
See LICENSE file.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"                
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">         

    <p:dialog id="addInventoryCableConnectionDialog"
              widgetVar="addInventoryCableConnectionDialogWidget"
              modal="true"
              closable="false"
              header="Add Cable Connection"
              styleClass="viewTransparentBackgroundDialog"
              resizable="false">
        <ui:param name="connectionEditRendered"
                  value="#{itemDomainInventoryController.connectionEditRendered}" />

        <p:outputPanel id="addInventoryCableConnectionDialogOutputPanel"
                       rendered="#{connectionEditRendered}">

            <ui:param name="currentConnectionCable"
                      value="#{itemDomainInventoryController.currentConnectionCable}" />

            <p:panelGrid columns="2">

                <h:outputLabel value="Port"/>    
                <p:outputPanel rendered="#{itemDomainInventoryController.itemHasAvaialbeConnectors}">
                    <p:selectOneListbox var="connector"
                                        styleClass="leftAlignedText"
                                        converter="connectorConverter">
                        <p:ajax listener="#{itemDomainInventoryController.handleConnectorSelectionEvent}" 
                                update="addInventoryCableConnectionDialogOutputPanel"
                                oncomplete="PF('addInventoryCableConnectionDialogWidget').initPosition()"/>
                        <ui:include src="itemDomainInventoryConnectionsListSelectConnectorObject.xhtml">
                            <ui:param name="selectItemsValue" 
                                      value="#{itemDomainInventoryController.availableConnectorListForCurrent}" />
                        </ui:include>
                    </p:selectOneListbox>
                </p:outputPanel>
                <p:outputPanel rendered="#{!itemDomainInventoryController.itemHasAvaialbeConnectors}">
                    Item does not have any more open ports available.
                </p:outputPanel>

                <h:outputLabel value="Direct Connection"
                               rendered="#{currentConnectionCable != null}"/>
                <p:outputPanel rendered="#{currentConnectionCable != null}">
                    <p:selectBooleanButton offLabel="No" 
                                           onLabel="Yes"
                                           value="#{itemDomainCableController.isDirectConnectionForCurrent}"
                                           onchange="directConnectionValueChanged()"
                                           disabled="#{itemDomainInventoryController.selectedSecondConnectorDefined()}"/>
                    
                    <p:remoteCommand name="directConnectionValueChanged"
                                     update="addInventoryCableConnectionDialogOutputPanel"
                                     action="#{itemDomainInventoryController.updateConnectorTypesForCurrentCable()}"
                                     oncomplete="PF('addInventoryCableConnectionDialogWidget').initPosition()"/>
                    
                    <ui:param name="renderCableInformation"
                              value="#{!itemDomainCableController.isDirectConnectionForCurrent}" />

                </p:outputPanel>

                <h:outputLabel value="Cable Length"
                               rendered="#{currentConnectionCable != null and renderCableInformation}"/>
                <p:outputPanel rendered="#{currentConnectionCable != null and renderCableInformation}"
                               id="addInventoryCableConnectionCableLengthPanel">
                    <p:outputPanel rendered="#{itemDomainCableController.setCableLengthAttribute}" >
                        <p:panelGrid columns="2">
                            <p:inputNumber rendered="#{currentConnectionCable != null}"
                                           value="#{itemDomainCableController.lengthForCurrent}"
                                           minValue="0"
                                           onblur="updateAddInventoryCableConnectionCableLengthPanel()"/>
                            <p:selectOneMenu value="#{itemDomainCableController.unitForCurrent}"
                                             onchange="updateAddInventoryCableConnectionCableLengthPanel()">
                                <f:selectItems value="#{itemDomainCableController.allowedLengthUnits}" />
                            </p:selectOneMenu>
                        </p:panelGrid>
                        <p:remoteCommand name="updateAddInventoryCableConnectionCableLengthPanel"
                                         update="addInventoryCableConnectionCableLengthPanel"/>

                    </p:outputPanel>
                    <p:outputPanel rendered="#{!itemDomainCableController.setCableLengthAttribute}" >
                        <p:commandButton value="Add length information"
                                         action="#{itemDomainCableController.enableCableLengthAttribute(true)}" 
                                         update="addInventoryCableConnectionCableLengthPanel"/>                    
                    </p:outputPanel>
                </p:outputPanel>


                <h:outputLabel value="First Cable Connector" 
                               rendered="#{currentConnectionCable != null and renderCableInformation}"/>

                <p:panelGrid columns="2"
                             rendered="#{currentConnectionCable != null and renderCableInformation}">
                    <ui:include src="../../itemConnector/private/itemConnectorSimpleEditObject.xhtml">
                        <ui:param name="currentItemConnector"
                                  value="#{itemDomainInventoryController.firstCableItemConnector}"/> 
                        <ui:param name="disabled" value="#{true}" />
                    </ui:include>
                </p:panelGrid>                                                        

                <h:outputLabel value="Second Cable Connector"
                               rendered="#{currentConnectionCable != null and renderCableInformation}"/>

                <p:outputPanel id="secondItemConnectorSimpleEdit"
                               rendered="#{currentConnectionCable != null and renderCableInformation}">
                    <p:panelGrid columns="2"
                                 id="secondCableConnectorTypeSimpleEditObject">
                        <ui:include src="../../itemConnector/private/itemConnectorSimpleEditObject.xhtml">
                            <ui:param name="currentItemConnector"
                                      value="#{itemDomainInventoryController.secondCableItemConnector}"/> 
                            <ui:param name="onChangeConnector" 
                                      value="secondConnectorChanged();" />
                        </ui:include>
                    </p:panelGrid>
                    <p:blockUI block="secondCableConnectorTypeSimpleEditObject"
                               blocked="#{itemDomainInventoryController.selectedSecondConnectorDefined()}">
                        Please disconnect connector to make changes.
                    </p:blockUI>


                    <p:remoteCommand name="secondConnectorChanged"
                                     update="secondItemConnectorSimpleEdit"
                                     onstart="PF('loadingDialog').show()"
                                     action="#{itemDomainInventoryController.loadAvailableInventoryItemListWithSecondItemConnector()}"
                                     oncomplete="updateAddInventoryCableConnectionDialogOutputPanel();
                                     PF('loadingDialog').hide()"/>
                </p:outputPanel>

                <h:outputLabel value="Connected To"
                               rendered="#{currentConnectionCable != null}"/>
                <p:outputPanel rendered="#{currentConnectionCable != null}">                        
                    <ui:param name="secondItemConnector"
                              value="#{itemDomainInventoryController.selectedConnectorOfSecondItem}"/>

                    <ui:param name="secondConnectorDefined"
                              value="#{itemDomainInventoryController.selectedSecondConnectorDefined()}" />

                    <p:outputPanel rendered="#{!secondConnectorDefined}">
                        <p:dataTable value="#{itemDomainInventoryController.inventoryItemsWithRequiredConnector}"
                                     var="inventoryItem"
                                     selectionMode="single"
                                     selection="#{itemDomainInventoryController.selectedSecondItemWithRequiredConnection}"
                                     rowKey="#{inventoryItem}">
                            <p:column headerText="Catalog Item">
                                #{inventoryItem.derivedFromItem.name}
                            </p:column>                                                
                            <p:column headerText="Name">
                                #{inventoryItem.name}
                            </p:column>
                            <p:ajax event="rowSelect"
                                    update="@form:addInventoryCableConnectionSecondItemConnectorSelectDialog"
                                    oncomplete="PF('addInventoryCableConnectionSecondItemConnectorSelectDialogWidget').show();"/>
                        </p:dataTable>
                    </p:outputPanel>
                    <p:outputPanel rendered="#{secondConnectorDefined}">
                        <h:outputText value="#{secondItemConnector} of #{itemDomainInventoryController.selectedSecondItemWithRequiredConnection}" />
                        <br/>
                        <p:commandButton value="Disconnect" 
                                         action="#{itemDomainInventoryController.disconnectSecondConnector()}"
                                         oncomplete="updateAddInventoryCableConnectionDialogOutputPanel()"
                                         icon="ui-icon-carat-2-e-w"/>
                    </p:outputPanel>                   

                </p:outputPanel>
            </p:panelGrid>
        </p:outputPanel>         

        <p:remoteCommand name="updateAddInventoryCableConnectionDialogOutputPanel"
                         update="addInventoryCableConnectionDialogOutputPanel" />

        <f:facet name="footer">
            <p:commandButton value="Save" 
                             action="#{itemDomainInventoryController.saveConnectionInformation('onSuccessfulSaveConnectionInformation()')}"
                             update="addInventoryCableConnectionDialogOutputPanel"
                             rendered="#{itemDomainInventoryController.itemHasAvaialbeConnectors}" 
                             icon="ui-icon-disk">
                <p:resetInput target="addInventoryCableConnectionDialogOutputPanel"/> 
            </p:commandButton>
            <p:commandButton label="Cancel" icon="ui-icon-arrowreturnthick-1-w"
                             value="Cancel"
                             action="#{itemDomainInventoryController.cancelCreateItemCableConnectionRelationshipForCurrent()}"
                             oncomplete="PF('addInventoryCableConnectionDialogWidget').hide()">                
                <p:resetInput target="addInventoryCableConnectionDialogOutputPanel"/> 
            </p:commandButton>

            <p:remoteCommand name="onSuccessfulSaveConnectionInformation"
                             onstart="PF('addInventoryCableConnectionDialogWidget').hide()"
                             update="@form" />
        </f:facet>
    </p:dialog>

    <ui:include src="itemDomainInventoryConnectionsListSelectPortDialog.xhtml" />

</ui:composition>


