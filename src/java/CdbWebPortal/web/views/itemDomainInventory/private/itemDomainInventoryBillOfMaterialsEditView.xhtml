<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright (c) UChicago Argonne, LLC. All rights reserved.
See LICENSE file.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core">
    <p:outputPanel id="inventoryItemEditBOMViewOutputPanel">
        <ui:param name="fullUpateTarget" value="@form:inventoryItemEditBOMViewOutputPanel" />
        <p:outputPanel rendered="#{itemDomainInventoryController.currentHasPartsToDisplay}">      
            <!-- TODO: Remove columns option and render header and row in primefaces 6.2 --> 

            <p:panelGrid id="inventoryItemEditBOMViewPanelGrid"
                         columns="2">          

                <p:outputPanel>
                    <!-- Removed until primefaces 6.2  
                    <f:facet name="header">
                        <p:row>
                            <p:column styleClass="panelGridHeaderColumn">Parts List</p:column>
                            <p:column styleClass="panelGridHeaderColumn">Define Inventory Item For Selected Part</p:column>
                        </p:row>
                    </f:facet>

                    <p:row>
                    <p:column styleClass="panelGridBorderedCell">                
                    -->
                    <p:panel>
                        <p:tree value="#{itemDomainInventoryController.currentItemBOMListTree}"
                                id="partsTree"
                                var="inventoryBOM"
                                selectionMode="single"
                                selection="#{itemDomainInventoryController.selectedItemBOMTreeNode}"                                    
                                >
                            <p:ajax event="select" update="#{fullUpateTarget}"/>

                            <p:treeNode type="newItem" icon="ui-icon-plus">
                                <ui:include src="itemDomainInventoryBillOfMaterialsTreeNode.xhtml">
                                    <ui:param name="viewName" value="newItem"/>
                                </ui:include>
                            </p:treeNode>
                            <p:treeNode type="existingItem" icon="ui-icon-check">
                                <ui:include src="itemDomainInventoryBillOfMaterialsTreeNode.xhtml">
                                    <ui:param name="viewName" value="existingItem"/>
                                </ui:include>
                            </p:treeNode>
                            <p:treeNode type="placeholder" icon="ui-icon-close">
                                <ui:include src="itemDomainInventoryBillOfMaterialsTreeNode.xhtml">
                                    <ui:param name="viewName" value="placeholder"/>
                                </ui:include>
                            </p:treeNode>
                            <p:treeNode rendered="#{itemDomainInventoryController.showOptionalPartsInBom}"
                                        type="unspecifiedOptional" icon="ui-icon-radio-off" >
                                <ui:include src="itemDomainInventoryBillOfMaterialsTreeNode.xhtml">
                                    <ui:param name="viewName" value="unspecifiedOptional"/>
                                </ui:include>
                            </p:treeNode>
                            <p:treeNode>
                                <ui:include src="itemDomainInventoryBillOfMaterialsTreeNode.xhtml"/>
                            </p:treeNode>
                        </p:tree>
                    </p:panel>
                    <p:commandButton value="#{itemDomainInventoryController.showOptionalPartsInBom ? 'Hide' : 'Show'} Optional"
                                     update="#{fullUpateTarget}"
                                     action="#{itemDomainInventoryController.toggleShowOptionalItems()}"
                                     rendered="#{itemDomainInventoryController.currentItemBOMTreeHasOptionalItems}"/>
                    <!-- Removed until primefaces 6.2  
                    </p:column>
                    <p:column styleClass="panelGridBorderedCell">               
                    -->
                </p:outputPanel>

                <p:outputPanel>
                    <p:outputPanel rendered="#{itemDomainInventoryController.selectedItemBOMTreeNode != null}">                       
                        <ui:include src="itemDomainInventoryBillOfMaterialsEditPanel.xhtml">
                            <ui:param name="billOfMaterialItem" value="#{itemDomainInventoryController.selectedItemBOMTreeNode.data}" />
                            <ui:param name="viewName" value="BOMTreeView" />
                        </ui:include>

                    </p:outputPanel>
                    <p:outputPanel rendered="#{itemDomainInventoryController.selectedItemBOMTreeNode == null}">
                        <div class="viewColors">
                            <h1>Please Select a part from parts list to begin.</h1>
                        </div>
                    </p:outputPanel>

                    <!-- Removed until primefaces 6.2  
                    </p:column>
                    </p:row>
                    -->
                </p:outputPanel>

            </p:panelGrid>                       
        </p:outputPanel>

        <p:outputPanel rendered="#{itemDomainInventoryController.currentHasPartsToDisplay == false}">
            <ui:include src="itemDomainInventoryBillOfMaterialsEditPanel.xhtml">
                <ui:param name="billOfMaterialItem" value="#{itemDomainInventoryController.current.containedInBOM}" />
                <ui:param name="viewName" value="BOMSingleView" />
                <ui:param name="renderEditPanelHeader" value="#{renderEditPanelHeader != null ? renderEditPanelHeader : true}" />
            </ui:include>
        </p:outputPanel>

    </p:outputPanel>



</ui:composition>


