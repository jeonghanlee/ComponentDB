<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <p:column sortBy="#{componentObject.id}" headerText="Id"
                  filterBy="#{componentObject.id}" filterMatchMode="contains"
                  filterValue="#{componentController.filterById}"
                  filterStyleClass="shortFilterBox"
                  rendered="#{componentController.displayId}">
            <h:outputText value="#{componentObject.id}"/>
        </p:column>

        <p:column sortBy="#{componentObject.name}" headerText="Name" 
                  filterBy="#{componentObject.name}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByName}"
                  rendered="true" >
            <f:attribute name="exportValue" value="#{componentObject.name}"/>
            <ui:param name="componentLink" value="view.xhtml?id=#{componentObject.id}" />
            
            <ui:fragment rendered="#{assemblyComponentsUIFeatureDisabled}">
                <h:outputLink value="#{componentLink}" title="View component details">
                    <h:outputText value="#{componentObject.name}"/>
                </h:outputLink>  
            </ui:fragment>
            
            <ui:fragment rendered="#{!assemblyComponentsUIFeatureDisabled}">
                <ui:param name="isAssembly" value="#{componentObject.isAssembly}"/>
                <ui:fragment rendered="#{!isAssembly}">
                    <h:outputLink value="#{componentLink}" title="View component details">
                        <h:outputText value="#{componentObject.name}"/>
                    </h:outputLink>  
                </ui:fragment>
                <ui:fragment rendered="#{isAssembly}">
                    <p:treeTable id="assemblyComponentListTreeTable"
                                 value="#{componentController.createAssemblyRoot(componentObject)}"
                                 var="assemblyComponentObject"
                                 styleClass="assemblyTreeTable">
                        <p:column>
                            <h:outputLink value="view.xhtml?id=#{assemblyComponentObject.id}" title="View component details">
                                <h:outputText value="#{assemblyComponentObject.name}"/>
                            </h:outputLink>             
                        </p:column>
                    </p:treeTable>
                </ui:fragment>
            </ui:fragment>
        </p:column>

        <p:column sortBy="#{componentObject.modelNumber}" headerText="Model Number" 
                  filterBy="#{componentObject.modelNumber}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByModelNumber}"
                  rendered="#{componentController.displayModelNumber}">
            <h:outputText value="#{componentObject.modelNumber}"/>
        </p:column>

        <p:column sortBy="#{componentObject.description}" headerText="Description" 
                  filterBy="#{componentObject.description}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByDescription}"
                  rendered="#{componentController.displayDescription}">
            <h:outputText value="#{componentObject.description}"/>
        </p:column>

        <p:column sortBy="#{componentObject.componentType.name}" headerText="Type" 
                  filterBy="#{componentObject.componentType}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByType}"
                  rendered="#{componentController.displayType}">
            <h:outputText value="#{componentObject.componentType}"/>
        </p:column>

        <p:column sortBy="#{componentObject.componentType.componentTypeCategory.name}" headerText="Category" 
                  filterBy="#{componentObject.componentType.componentTypeCategory}" filterMatchMode="exact"
                  filterOptions="#{componentTypeCategoryController.availableItemsForSelectOne}"
                  filterValue="#{componentController.filterByCategory}"
                  rendered="#{componentController.displayCategory}">
            <h:outputText value="#{componentObject.componentType.componentTypeCategory.name}"/>
        </p:column>

        <p:column sortBy="#{componentObject.componentSources}" headerText="Sources" 
                  filterBy="#{componentObject.componentSources}" filterMatchMode="contains"
                  filterValue="#{componentController.filterBySources}"
                  rendered="#{componentController.displaySources}">
            <h:outputText value="#{componentObject.componentSources}"/>
        </p:column>

</ui:composition>


