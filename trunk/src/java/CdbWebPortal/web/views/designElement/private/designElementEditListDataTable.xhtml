<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui">

    <ui:param name="designObject" value="#{designController.selected}"/>
    <p:dataTable id="designElementEditListDataTable" 
                 widgetVar="designElementEditListDataTableWidget"
                 var="designElementObject" 
                 value="#{designObject.designElementList}" 
                 rows="#{designElementController.displayNumberOfItemsPerPage}"
                 paginator="true" 
                 paginatorAlwaysVisible="false" 
                 editable="true"
                 emptyMessage="No design elements found.">

        <p:column sortBy="#{designElementObject.id}" headerText="Id"
                  rendered="#{designElementController.displayId}">
            <h:outputText value="#{designElementObject.id}"/>
        </p:column>

        <p:column sortBy="#{designElementObject.name}" headerText="Element Name">
            <h:inputText id="designElementObjectName" value="#{designElementObject.name}" styleClass="cellInput"/>
            <p:tooltip for="designElementObjectName" value="Enter name."/>
        </p:column>

        <p:column sortBy="#{designElementObject.component.name}" headerText="Element entity type">
            <p:fragment id="designElementSelectOneFragment#{designElementObject.viewUUID}">
                <p:selectOneRadio id="designElementSelectOne#{designElementObject.viewUUID}"
                                  value="#{designElementObject.editDesignElementType}" 
                                  onchange="updateDesignElementSelectOneFragment#{designElementObject.viewUUID}()">
                    <f:selectItem itemValue="component" itemLabel="Component"/>
                    <f:selectItem itemValue="design" itemLabel="Design" />
                </p:selectOneRadio>
                <p:remoteCommand name="updateDesignElementSelectOneFragment#{designElementObject.viewUUID}"
                                 onstart="PF('loadingDialog').show();
                                 updateChildDesignElementTypeValueFragment#{designElementObject.viewUUID}()"
                                 update="@parent" />
            </p:fragment>
        </p:column>

        <p:column sortBy="#{designElementObject.childDesign.name}" headerText="Entity value">
            <p:fragment id="childDesignElementTypeValueFragment#{designElementObject.viewUUID}" >
                <ui:fragment rendered="#{designElementController.getDisplayComponentSelection(designElementObject)}">
                    <p:autoComplete id="componentDropdown#{designElementObject.viewUUID}" 
                                    value="#{designElementObject.component}" 
                                    var="componentObject"
                                    converter="componentConverter" 
                                    completeMethod="#{designElementController.completeComponent}" 
                                    itemLabel="#{componentObject.name}"
                                    itemValue="#{componentObject}"
                                    valueChangeListener="#{designElementController.selectComponentValueChangeListener(valueChangeEvent)}"
                                    forceSelection="true"
                                    scrollHeight="200"
                                    dropdown="true" 
                                    styleClass="autocomplete">
                        <p:ajax event="valueChange" immediate="true" process="@this"/>
                    </p:autoComplete>

                    <p:commandButton id="designElementComponentSelectButton"
                                     oncomplete="PF('designElementComponentSelectDialogWidget').show()"
                                     immediate="true"
                                     alt="Select Component" 
                                     styleClass="selectButtonForAutocomplete"
                                     icon="ui-icon-search">
                        <f:setPropertyActionListener value="#{designElementObject}" target="#{designElementController.current}"/>
                        <p:tooltip for="designElementComponentSelectButton" value="Search for component."/>
                    </p:commandButton>
                </ui:fragment>
                <ui:fragment rendered="#{designElementController.getDisplayChildDesignSelection(designElementObject)}">
                    <p:autoComplete id="childDesignDropdown" 
                                    value="#{designElementObject.childDesign}" 
                                    var="childDesignObject"
                                    converter="designConverter" 
                                    completeMethod="#{designElementController.completeChildDesign}" 
                                    itemLabel="#{childDesignObject.name}"
                                    itemValue="#{childDesignObject}"
                                    valueChangeListener="#{designElementController.selectChildDesignValueChangeListener(valueChangeEvent)}"
                                    forceSelection="true"
                                    scrollHeight="200"
                                    dropdown="true" 
                                    styleClass="autocomplete">
                        <p:ajax event="valueChange" immediate="true" process="@this"/>
                    </p:autoComplete>

                    <p:commandButton id="designElementChildDesignSelectButton"
                                     oncomplete="PF('designElementChildDesignSelectDialogWidget').show()"
                                     immediate="true"
                                     alt="Select Child Design" 
                                     styleClass="selectButtonForAutocomplete"
                                     icon="ui-icon-search">
                        <f:setPropertyActionListener value="#{designElementObject}" target="#{designElementController.current}"/>
                        <p:tooltip for="designElementChildDesignSelectButton" value="Search for child design."/>
                    </p:commandButton>
                </ui:fragment>

                <p:remoteCommand name="updateChildDesignElementTypeValueFragment#{designElementObject.viewUUID}"
                                 update="@parent"
                                 oncomplete="PF('loadingDialog').hide();"/>
            </p:fragment>
        </p:column>

        <p:column sortBy="#{designElementObject.location.name}" headerText="Location"
                  rendered="#{designElementController.displayLocation}">
            <p:autoComplete id="locationDropdown" 
                            value="#{designElementObject.location}" 
                            var="location"
                            converter="locationConverter" 
                            completeMethod="#{designElementController.completeLocation}" 
                            itemLabel="#{location.name}"
                            itemValue="#{location}"
                            valueChangeListener="#{designElementController.selectLocationValueChangeListener}"
                            forceSelection="true"
                            scrollHeight="200"
                            dropdown="true" 
                            styleClass="autocomplete">
                <p:ajax event="valueChange" immediate="true" process="@this"/>
            </p:autoComplete>
            <p:commandButton id="location" onclick="PF('designElementLocationSelectDialogWidget').show();" 
                             alt="Select" icon="ui-icon-search"
                             styleClass="selectButtonForAutocomplete"
                             immediate="true">
                <f:setPropertyActionListener value="#{designElementObject}" target="#{designElementController.current}"/>
            </p:commandButton>
            <p:tooltip for="location" value="Select location."/>
        </p:column>        

        <p:column sortBy="#{designElementObject.sortOrder}" headerText="Sort Order"
                  rendered="#{designElementController.displaySortOrder}">
            <h:inputText id="sortOrder" value="#{designElementObject.sortOrder}" styleClass="shortCellInput"/>
            <p:tooltip for="sortOrder" value="Enter sort order."/>
        </p:column>


        <p:column sortBy="#{designElementObject.description}" headerText="Description"
                  rendered="#{designElementController.displayDescription}">
            <h:inputText id="description" value="#{designElementObject.description}" styleClass="longCellInput"/>
            <p:tooltip for="description" value="Enter description."/>
        </p:column>

        <p:column headerText="Actions" exportable="false">
            <div class="actionLink">
                <p:commandLink action="#{designController.deleteDesignElement(designElementObject)}" 
                               actionListener="#{designElementController.destroy(designElementObject)}"
                               styleClass="ui-icon ui-icon-trash" title="Delete" update="@form"
                               rendered="#{loginController.isEntityWriteable(designElementObject.entityInfo)}"/>
            </div>
        </p:column>
    </p:dataTable>

    <ui:include src="designElementComponentSelectDialog.xhtml">
        <ui:param name="updateTarget" value="designElementEditListDataTable"/>
    </ui:include>
    <ui:include src="designElementComponentSelectCustomizeDisplayDialog.xhtml"/>
    <ui:include src="designElementChildDesignSelectDialog.xhtml">
        <ui:param name="updateTarget" value="designElementEditListDataTable"/>
    </ui:include>
    <ui:include src="designElementChildDesignSelectCustomizeDisplayDialog.xhtml"/>
    <ui:include src="designElementLocationSelectDialog.xhtml">
        <ui:param name="updateTarget" value="designElementEditListDataTable"/>
    </ui:include>

</ui:composition>


